@NonCPS
def String foo(String curVer) {
  def version = "${curVer}"
  def pattern = ~/(\d{1,3})\.(\d{1,3})\.\d{1,4}$/
  def newVersion = version.replaceFirst(pattern) { _,major,minor -> "${major}.${(minor as int) + 1}.0"}
  println "Version ${version} -> new ${newVersion}"
  return newVersion
}

def service = "hw2"
pipeline {
    agent any
    
    stages {
        
        stage('Example Build') {
            steps {
               script {
                 String curVer =readFile(file: "${service}/version")
                   def updatedVer = foo(curVer)
                   writeFile(file: "${service}/version", text: "${updatedVer}")             
          
                }
                dir("${WORKSPACE}") {

                   sh "git status" 
                   sh "git add ${service}/version"
                   sh "git config --global --edit"
                   sh "git commit --amend --reset-author"
                   sh "git commit -m 'Added to  version file the new ver: automated Jenikins job'"
                   sh "git push origin master"
                }
            }
        }
    }
}
